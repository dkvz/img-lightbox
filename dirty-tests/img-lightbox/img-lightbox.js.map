{"version":3,"sources":["img-lightbox.js"],"names":["ImgLightbox","loaderSvgUrl","require","loading","attachShadow","mode","HTMLElement","shadowRoot","innerHTML","template","overlay","querySelector","loadingOverlay","link","img","fullImage","getAttribute","addEventListener","showLightbox","bind","e","preventDefault","_showOverlay","showImage","document","createElement","src","tabIndex","forEach","type","_hideOverlay","currentTarget","appendChild","style","transform","focus","display","prototype"],"mappings":"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","file":"img-lightbox.js","sourceRoot":"..\\src\\shadow","sourcesContent":["const loaderSvgUrl = require('../../assets/hourglass.svg');\r\n\r\nclass ImgLightbox extends HTMLElement {\r\n\r\n  constructor() {\r\n    super();\r\n    this.loading = false;\r\n    this.attachShadow({mode: 'open'});\r\n  }\r\n\r\n  connectedCallback() {\r\n    // Template is added to prototype below the \r\n    // class definition.\r\n    this.shadowRoot.innerHTML = this.template;\r\n    // Get some element references from shadow DOM:\r\n    this.overlay = this.shadowRoot.querySelector('#overlay');\r\n    this.loadingOverlay = this.shadowRoot.querySelector('#loader');\r\n    // The slotted elements are actually not in \r\n    // the shadow DOM so we can get them like so:\r\n    const link = this.querySelector('a');\r\n    const img = this.querySelector('img');\r\n    if (link) {\r\n      // Store the URL as the full image URL:\r\n      this.fullImage = link.getAttribute('href');\r\n      // Register a click event that has to \r\n      // prevent default:\r\n      link.addEventListener('click', this.showLightbox.bind(this));\r\n    } else if (img) {\r\n      this.fullImage = img.getAttribute('src');\r\n      img.addEventListener('click', this.showLightbox.bind(this));\r\n    }\r\n  }\r\n\r\n  showLightbox(e) {\r\n    e.preventDefault();\r\n    // Implement some kind of lock:\r\n    if (!this.loading) {\r\n      this.loading = true;\r\n      // Preload the full image.\r\n      // Show the spinner overlay:\r\n      this._showOverlay(this.loadingOverlay);\r\n      if (!this.img) {\r\n        this.img = document.createElement('img');\r\n        this.img.addEventListener('load', () => this.showImage());\r\n        this.img.src = this.fullImage;\r\n        this.img.tabIndex = 1;\r\n        // Prepare the events to close the overlay.\r\n        // I'm doing this here to light up what's\r\n        // happening in connectedCallback.\r\n        ['click', 'keydown'].forEach(\r\n          (type) => \r\n            this.overlay.addEventListener(\r\n              type, \r\n              (e) => this._hideOverlay(e.currentTarget)\r\n            )\r\n        );\r\n        this.overlay.appendChild(this.img);\r\n      } else {\r\n        this.showImage();\r\n      }\r\n    }\r\n  }\r\n\r\n  showImage() {\r\n    this.img.style.transform = 'scale(0.1)';\r\n    // Hide the loading overlay:\r\n    this._hideOverlay(this.loadingOverlay);\r\n    this._showOverlay(this.overlay);\r\n    // Focus the overlay (requires it to have a tabIndex):\r\n    this.overlay.focus();\r\n    // Start the CSS transition:\r\n    this.img.style.transform = 'scale(1)';\r\n    // Don't forget to unlock the click event:\r\n    this.loading = false;\r\n  }\r\n\r\n  _showOverlay(overlay) {\r\n    overlay.style.display = 'flex';\r\n  }\r\n\r\n  _hideOverlay(overlay) {\r\n    overlay.style.display = '';\r\n  }\r\n\r\n}\r\n\r\n// The loader image should be cached, inlining it\r\n// will create tons of copies of SVG nodes.\r\nImgLightbox.prototype.template = /*template*/`\r\n<style>\r\n  :host {\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    position: relative;\r\n  }\r\n\r\n  #loader {\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0,0,0,.2);\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  #overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    overflow: hidden;\r\n    z-index: 999;\r\n    background-color: rgba(0,0,0,.5);\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  #loader img {\r\n    width: 50%;\r\n    opacity: 0.6;\r\n    animation: lightbox-loader 2s infinite;\r\n  }\r\n\r\n  #overlay img {\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    transition: transform 0.8s;\r\n  }\r\n\r\n  @keyframes lightbox-loader {\r\n    0% {transform: rotate(0deg);}\r\n    100% {transform: rotate(360deg);}\r\n  }\r\n</style>\r\n<slot></slot>\r\n<div id=\"overlay\" tabindex=\"0\"></div>\r\n<div id=\"loader\">\r\n  <img src=\"${loaderSvgUrl}\">\r\n</div>\r\n`;\r\n\r\nexport default ImgLightbox;"]}